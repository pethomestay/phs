= link_to 'Admin Dashboard', admin_dashboard_path, class: 'btn pull-right'
%h1 Reconciliation for host payouts
%h5= link_to "Download Reconciliations", reconciliations_file_admin_bookings_url(format: "csv")
%p
  Note:
  %i.icon-exclamation-sign
  means user has not entered his payout details
%table.table.tablesorter.table-bordered
  %thead
    %tr
      %td.table-header-text{ colspan: '3' } General Information
      %td.table-header-text{ colspan: '3' } Guest Paid
      %td.table-header-text{ colspan: '2' } Coupon
      %td.table-header-text{ colspan: '3' } Host Payout

    %tr
      %th Host
      %th BSB/Acc
      %th Checkout Date
      %th Transaction Reference
      %th Subtotal (S)
      %th Fee (F)
      %th Total (S+F)
      %th Guest discount
      %th Code Source
      %th Insurance Fee (I)
      %th PHS Fee (P)
      %th total (S - I - P)
      %th Host Paid
  %tbody
    - @bookings.sort_by(&:check_out_date).each do |booking|
      - if booking.payment.present?
        - discount = booking.coupon.present? ? booking.coupon.discount_amount : 0
        - style = booking.for_charity ? "background: #c9cefe;" : ""
        %tr{ "data-id" => booking.id, :style => style }
          %td= booking.bookee.name.capitalize
          %td= booking.bookee.account.present? ? "#{booking.bookee.try(:account).try(:bsb)}<br>#{booking.bookee.try(:account).try(:account_number)}".html_safe : "NONE"
          %td= booking.check_out_date.strftime('%d %b %y')
          %td{ class: "stored-card-color" }
            = booking.payment.braintree_transaction_id
            %br
            = "#{booking.payment.status} (BrainTree)"

          %td= number_to_currency(booking.subtotal)
          %td= number_to_currency(booking.payment.amount - booking.subtotal + discount)
          %td= number_to_currency(booking.payment.amount)

          %td= number_to_currency(discount)
          %td= booking.try(:coupon).try(:owner).try(:name)

          %td= number_to_currency(booking.public_liability_insurance)
          %td= number_to_currency(booking.phs_service_charge)
          %td= number_to_currency(booking.host_payout)
          %td
            %input.booking_paid_confirm{ type: 'button', value: 'YES' }
            - account = booking.bookee.account
      - else
        %tr{ "data-id" => booking.id }
          %td= booking.booker.name.capitalize
          %td= booking.bookee.account.present? ? "#{booking.bookee.try(:account).try(:bsb)}<br>#{booking.bookee.try(:account).try(:account_number)}".html_safe : "NONE"
          %td= booking.check_out_date.strftime('%d %b %y')
          - reference = booking.transaction.reference
          %td{ class: "#{reference.include?('transaction_id') ? 'credit-card-color' : 'stored-card-color'}" }
            = booking.transaction.reference

          %td= currency_formatter(booking.subtotal)
          %td= currency_formatter(booking.credit_card_fee)
          %td= currency_formatter(booking.transaction.amount)

          %td
          %td

          %td= currency_formatter(booking.public_liability_insurance)
          %td= currency_formatter(booking.phs_service_charge)
          %td= currency_formatter(booking.host_payout)
          %td
            %input.booking_paid_confirm{ type: 'button', value: 'YES' }
            - account = booking.bookee.account
%hr/
- if @coupon_payout_requests.any?
  %h1 Coupon Payout Requests
  %table.table.table-bordered
    %thead
      %th.table-header-text Requestor
      %th.table-header-text Amount requested
      %th.table-header-text Requested on
      %th.table-header-text Actions
    %tbody
      - @coupon_payout_requests.each do |coupon_payout|
        %tr
          %td= "#{coupon_payout.user.name} (#{coupon_payout.user.try(:account).try(:bsb)} / #{coupon_payout.user.try(:account).try(:account_number)})"
          %td= number_to_currency(coupon_payout.payment_amount)
          %td= coupon_payout.created_at.strftime("%l:%M %p, %d/%m/%y")
          %td
            = link_to "Pay", coupon_payout_path(coupon_payout), :method => 'put', class: 'btn'
:javascript
  $(document).ready(function(){
    $.tablesorter.addParser({
      id: "date",
      is: function (s) {
          return false;
      },
      format: function (s, table) {
        var date = (s + '').match(/\d{1,2}\s+\w{3}\s+\d{2}/);
        return date ? new Date(date[0]).getTime() || s : s;
      },
      type: "numeric"
    });
    $('table.tablesorter').tablesorter({headers:{2:{sorter:'date'},3:{sorter:false}},dateFormat: "uk"});
    $('.booking_paid_confirm').on('click', function(){
      target_row = $(this).closest('tr');
      booking_id = target_row.data('id');
      debugger;
      $.ajax({
        url: '/bookings/' + booking_id + '/host_paid'
      }).done(function(){
        target_row.hide();
      });
    });
  });


